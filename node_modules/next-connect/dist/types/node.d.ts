/// <reference types="node" resolution-mode="require"/>
import type { IncomingMessage, ServerResponse } from "http";
import { Router } from "./router.js";
import type { HandlerOptions, ValueOrPromise } from "./types.js";
export declare type RequestHandler<Req extends IncomingMessage, Res extends ServerResponse> = (req: Req, res: Res) => ValueOrPromise<void>;
export declare class NodeRouter<Req extends IncomingMessage = IncomingMessage, Res extends ServerResponse = ServerResponse> extends Router<RequestHandler<Req, Res>> {
    constructor();
    private prepareRequest;
    run(req: Req, res: Res): Promise<unknown>;
    handler(options?: HandlerOptions<RequestHandler<Req, Res>>): (req: Req, res: Res) => Promise<void>;
}
export declare function getPathname(url: string): string;
export declare function createRouter<Req extends IncomingMessage, Res extends ServerResponse>(): NodeRouter<Req, Res>;
