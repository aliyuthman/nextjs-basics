import { Router } from "./router.js";
import type { HandlerOptions, ValueOrPromise } from "./types.js";
export declare type RequestHandler<Req extends Request, Ctx> = (req: Req, ctx: Ctx) => ValueOrPromise<Response | void>;
export declare class EdgeRouter<Req extends Request = Request, Ctx = unknown> extends Router<RequestHandler<Req, Ctx>> {
    constructor();
    private prepareRequest;
    run(req: Req, ctx: Ctx): Promise<unknown>;
    handler(options?: HandlerOptions<RequestHandler<Req, Ctx>>): (req: Req, ctx: Ctx) => Promise<any>;
}
export declare function getPathname(req: Request & {
    nextUrl?: URL;
}): string;
export declare function createEdgeRouter<Req extends Request, Ctx>(): EdgeRouter<Req, Ctx>;
